# from math import sqrt
#
# print('Данная программа решает квадратные уравнения(трёхчлены) формата +- ах**2 +- bx +- c')
# urovnenie = input('Введите уравнение: ')
# s = urovnenie.split(' ')
#
# # сбор коэффициентов для квадратного трехчлена
# if len(s) == 5:
#     if len(s[0]) == 4:
#         a = 1
#     else:
#         a = float(s[0][:-4])
#     b = float(s[2][:-1])
#     if s[1] == '-':
#         b = b * (-1)
#     c = float(s[4])
#     if s[3] == '-':
#         c = c * (-1)
# if len(s) == 6:
#     if len(s[1]) == 4:
#         a = -1
#     else:
#         a = float(s[1][:-4]) * (-1)
#     b = float(s[3][:-1])
#     if s[2] == '-':
#         b = b * (-1)
#     c = float(s[5])
#     if s[4] == '-':
#         c = c * (-1)
#
# # поиск дискриминанта
#
# D = b**2 - 4*a*c
#
# if D < 0:
#     print('Корней нет')
# if D >= 0:
#     # поиск корней при D = 0
#     if D == 0:
#         x = (-1)*b/(2*a)
#         print('Есть 1 корень:', x)
#
#     #выяснение извлекается ли целый корень из дискриминанта
#     if D != 0:
#         Dnew = sqrt(D)
#         flag = ''
#         d = str(Dnew)
#         s1 = d.split('.')
#         if len(s1[1]) == 1:
#             flag = True
#         else:
#             flag = False
#
#         # поиск корней без корня
#         if flag:
#             x1 = ((-1)*b + Dnew)/(2*a)
#             x2 = ((-1)*b - Dnew)/(2*a)
#             print("Есть 2 корня:", x1, ';', x2)
#
#         # поиск корней с корнями
#         if not flag:
#             x1 = f'({(-1)*b} + корень из {D})/{2*a}'
#             x2 = f'({(-1) * b} - корень из {D})/{2 * a}'
#             x3 = ((-1) * b + Dnew) / (2 * a)
#             s2 = str(x3).split('.')
#             v = s2[1][:4]
#             x3 = [s2[0], v]
#             x3 = '.'.join(x3)
#
#             x4 = ((-1) * b - Dnew) / (2 * a)
#             s3 = str(x4).split('.')
#             v1 = s3[1][:4]
#             x4 = [s3[0], v1]
#             x4 = '.'.join(x4)
#             print("Есть 2 корня:", x1, ';', x2, ';', x3, ';', x4)
